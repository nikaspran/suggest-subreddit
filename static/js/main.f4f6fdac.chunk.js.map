{"version":3,"sources":["components/Suggestion.module.scss","components/SuggestionPage.module.scss","components/LoginPage.module.scss","components/Footer.module.scss","components/Link.module.scss","components/CallToAction.module.scss","components/Suggestions.module.scss","components/Layout.module.scss","components/Loading.module.scss","config.ts","utils/RedditApi.ts","components/RedditApiProvider.tsx","components/CallToAction.tsx","components/CommaSeparatedList.tsx","assets/cross.svg","components/Suggestion.tsx","components/Suggestions.tsx","components/Layout.tsx","components/Link.tsx","components/Footer.tsx","components/FlexSpacer.tsx","components/LoginPage.tsx","utils/similarSubreddits.tsx","utils/similarSubreddits.worker.tsx","assets/spinner.svg","components/Loading.tsx","components/SuggestionPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","process","REDDIT_CLIENT_ID","REDDIT_REDIRECT_URI","toQueryString","params","Object","entries","map","key","value","window","encodeURIComponent","join","withQuery","url","keys","length","code","a","fetch","method","headers","Authorization","btoa","config","body","grant_type","redirect_uri","response","ok","Error","text","json","error","expires_at","Date","now","expires_in","RedditApi","token","after","limit","this","access_token","data","children","iterateAndCollectListing","login","location","href","client_id","response_type","state","duration","scope","logout","localStorage","removeItem","RedditApiContext","React","createContext","redditApi","undefined","RedditApiProvider","useState","setRedditApi","useEffect","storedToken","getItem","jsonToken","JSON","parse","retrieveToken","search","match","history","replaceState","fetchAccessToken","then","newToken","tokenString","stringify","setItem","storeToken","Provider","useRedditApi","useContext","CallToAction","className","otherProps","classNames","styles","callToAction","CommaSeparatedList","reduce","previous","current","index","_extends","assign","target","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","x1","y1","x2","y2","strokeLinecap","_ref","svgRef","title","props","width","height","viewBox","stroke","strokeWidth","ref","ForwardRef","forwardRef","LinkTo","subreddit","rel","Suggestion","score","contributors","suggestion","contentContainer","content","description","Math","round","Number","toFixed","controls","type","excludeButton","details","contributor","Suggestions","totalSubreddits","meta","Layout","layout","Link","element","link","Footer","footer","twitterLink","FlexSpacer","style","flex","LoginPage","loginPage","loginContainer","onClick","disclaimer","example","mockSuggestions","worker","waitForSimilarities","fetchSimilarities","Promise","resolve","reject","request","XMLHttpRequest","addEventListener","responseText","open","self","origin","send","getSimilarSubreddits","sourceSubreddits","count","similarTo","alreadyInSource","Set","toLowerCase","result","forEach","similarSubreddits","similarSubreddit","has","sortedEntries","sort","slice","fromEntries","event","postMessage","invocationKey","createWorker","workerFn","toString","blob","Blob","Worker","URL","createObjectURL","random","timeout","setTimeout","removeEventListener","resultListener","TIMEOUT_S","clearTimeout","fill","fillRule","transform","strokeOpacity","cx","cy","r","d","attributeName","from","to","dur","repeatCount","Loading","loading","SuggestionPage","setSimilarSubreddits","subscribedSubreddits","setSubscribedSubreddits","loadingState","setLoadingState","fetchSubscribedSubreddits","subreddits","display_name","container","logoutLink","suggestions","loadingContainer","App","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.f4f6fdac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"suggestion\":\"Suggestion_suggestion__V8twn\",\"contentContainer\":\"Suggestion_contentContainer__1L6gZ\",\"details\":\"Suggestion_details__25987\",\"content\":\"Suggestion_content__2M1JU\",\"title\":\"Suggestion_title__3GZHo\",\"score\":\"Suggestion_score__2df-3\",\"description\":\"Suggestion_description__a4vvc\",\"controls\":\"Suggestion_controls__2yJhl\",\"excludeButton\":\"Suggestion_excludeButton__pbK15\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"SuggestionPage_description__2pdr4\",\"container\":\"SuggestionPage_container__dAmph\",\"title\":\"SuggestionPage_title__1dTlJ\",\"logoutLink\":\"SuggestionPage_logoutLink__1ZCkD\",\"loadingContainer\":\"SuggestionPage_loadingContainer__24sJP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginPage\":\"LoginPage_loginPage__3bRAY\",\"loginContainer\":\"LoginPage_loginContainer__2S3VI\",\"title\":\"LoginPage_title__1EvV2\",\"disclaimer\":\"LoginPage_disclaimer__1K1lE\",\"example\":\"LoginPage_example__2fagL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__1G6Wy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Link_link__v1uWG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"callToAction\":\"CallToAction_callToAction__1lKlF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"suggestion\":\"Suggestions_suggestion__z2rEA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__3CwMv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading\":\"Loading_loading__2yynj\"};","const dev = {\n  REDDIT_CLIENT_ID: 'ocEV8buEyuz35w',\n  REDDIT_REDIRECT_URI: 'http://localhost:3000',\n};\n\nconst prod = {\n  REDDIT_CLIENT_ID: 'ubcs049_cdvODQ',\n  REDDIT_REDIRECT_URI: 'https://nikas.praninskas.com/suggest-subreddit/',\n};\n\nexport default process.env.NODE_ENV === 'production' ? prod : dev;\n","import config from '../config';\n\nconst randomString = () => '4';\n\nfunction toQueryString(params: object) {\n  return Object.entries(params).map(([key, value]) => `${key}=${window.encodeURIComponent(value)}`).join('&');\n}\n\nfunction withQuery(url: string, params: object) {\n  if (!Object.keys(params).length) {\n    return url;\n  }\n\n  return `${url}?${toQueryString(params)}`;\n}\n\nexport function redirectToAuth() {\n  window.location.href = withQuery('https://www.reddit.com/api/v1/authorize', {\n    client_id: config.REDDIT_CLIENT_ID, // eslint-disable-line @typescript-eslint/camelcase\n    response_type: 'code', // eslint-disable-line @typescript-eslint/camelcase\n    state: randomString(),\n    redirect_uri: config.REDDIT_REDIRECT_URI, // eslint-disable-line @typescript-eslint/camelcase\n    duration: 'temporary',\n    scope: 'mysubreddits',\n  });\n}\n\nexport interface RedditAuthToken {\n  access_token: string;\n  expires_in: number;\n  expires_at: number;\n  scope: string;\n  token_type: string;\n}\n\nexport async function fetchAccessToken(code: string) {\n  const response = await fetch('https://www.reddit.com/api/v1/access_token', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/x-www-form-urlencoded',\n      Authorization: `Basic ${btoa(`${config.REDDIT_CLIENT_ID}:`)}`,\n    },\n    body: toQueryString({\n      grant_type: 'authorization_code', // eslint-disable-line @typescript-eslint/camelcase\n      code,\n      redirect_uri: config.REDDIT_REDIRECT_URI, // eslint-disable-line @typescript-eslint/camelcase\n    }),\n  });\n\n  if (!response.ok) {\n    throw new Error(await response.text());\n  }\n\n  const json = await response.json();\n  if (json.error) {\n    throw new Error(json.error);\n  }\n\n  return {\n    ...json,\n    expires_at: Date.now() + json.expires_in * 1000, // eslint-disable-line @typescript-eslint/camelcase\n  } as RedditAuthToken;\n}\n\nexport interface Subreddit {\n  kind: string;\n  data: {\n    display_name: string;\n  };\n}\n\ninterface Listing {\n  kind: 'Listing';\n  data: {\n    after: string;\n    children: Subreddit[];\n  };\n}\n\nexport default class RedditApi {\n  constructor(private token: RedditAuthToken) {\n  }\n\n  private async iterateAndCollectListing(url: string, after?: string): Promise<Subreddit[]> {\n    const response = await fetch(withQuery(url, {\n      limit: 100,\n      ...after ? { after } : {},\n    }), {\n      headers: {\n        Authorization: `bearer ${this.token.access_token}`,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(await response.text());\n    }\n\n    const json = await response.json() as Listing;\n\n    return [\n      ...json.data.children,\n      ...json.data.after ? await this.iterateAndCollectListing(url, json.data.after) : [],\n    ];\n  }\n\n  async fetchSubscribedSubreddits() {\n    return this.iterateAndCollectListing('https://oauth.reddit.com/subreddits/mine/subscriber');\n  }\n}\n","import React, { ReactNode, useEffect, useState, useContext } from 'react';\nimport RedditApi, { RedditAuthToken, fetchAccessToken, redirectToAuth } from '../utils/RedditApi';\n\nconst TOKEN_KEY = 'redditApiToken';\nconst EXPIRATION_BUFFER_MS = 10 * 60 * 1000;\n\nfunction login() {\n  redirectToAuth();\n}\n\nfunction logout() {\n  localStorage.removeItem(TOKEN_KEY);\n}\n\nconst RedditApiContext = React.createContext<{\n  redditApi: RedditApi | undefined;\n  login: typeof login;\n  logout: typeof logout;\n}>({ redditApi: undefined, login, logout });\n\nfunction retrieveToken() {\n  const storedToken = localStorage.getItem(TOKEN_KEY);\n  if (!storedToken) {\n    return undefined;\n  }\n\n  const jsonToken = JSON.parse(storedToken) as RedditAuthToken;\n  if (!jsonToken.expires_at || jsonToken.expires_at < Date.now() - EXPIRATION_BUFFER_MS) {\n    logout();\n    return undefined;\n  }\n  return jsonToken;\n}\n\nfunction storeToken(token: RedditAuthToken) {\n  const tokenString = JSON.stringify(token);\n  localStorage.setItem(TOKEN_KEY, tokenString);\n}\n\n\nexport default function RedditApiProvider({\n  children,\n}: {\n  children: ReactNode;\n}) {\n  const [redditApi, setRedditApi] = useState<RedditApi>();\n\n  useEffect(() => {\n    const token = retrieveToken();\n\n    if (token) {\n      setRedditApi(new RedditApi(token));\n      return;\n    }\n\n    const [, code] = window.location.search.match(/code=([^&]+)/) || [];\n    if (code) {\n      window.history.replaceState(null, '', '/');\n      fetchAccessToken(code).then((newToken) => {\n        storeToken(newToken);\n        setRedditApi(new RedditApi(newToken));\n      });\n    }\n  }, []);\n\n  return (\n    <RedditApiContext.Provider\n      value={{\n        redditApi,\n        login,\n        logout: () => {\n          logout();\n          setRedditApi(undefined);\n        },\n      }}\n    >\n      {children}\n    </RedditApiContext.Provider>\n  );\n}\n\nexport function useRedditApi() {\n  return useContext(RedditApiContext);\n}\n","import React, { ButtonHTMLAttributes } from 'react';\nimport classNames from 'classnames';\nimport styles from './CallToAction.module.scss';\n\nexport default function CallToAction({\n  className,\n  ...otherProps\n}: ButtonHTMLAttributes<HTMLButtonElement>) {\n  return (\n    <button className={classNames(styles.callToAction, className)} {...otherProps} /> // eslint-disable-line react/button-has-type\n  );\n}\n","import React, { ReactNode } from 'react';\n\nexport default function CommaSeparatedList({\n  children,\n}: {\n  children: ReactNode[];\n}) {\n  return (\n    <>\n      {children.reduce((previous: ReactNode[], current, index) => {\n        if (index === 0) {\n          return [current];\n        }\n        return [...previous, index === children.length - 1 ? ' and ' : ', ', current];\n      }, [])}\n    </>\n  );\n}\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"line\", {\n  x1: 5,\n  y1: 5,\n  x2: 95,\n  y2: 95,\n  strokeLinecap: \"round\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"line\", {\n  x1: 5,\n  y1: 95,\n  x2: 95,\n  y2: 5,\n  strokeLinecap: \"round\"\n});\n\nvar SvgCross = function SvgCross(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 100,\n    height: 100,\n    viewBox: \"0 0 100 100\",\n    stroke: \"#000\",\n    strokeWidth: \"8px\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCross, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/cross.54ac65fd.svg\";\nexport { ForwardRef as ReactComponent };","import React, { AnchorHTMLAttributes } from 'react';\nimport classNames from 'classnames';\nimport { Score } from '../utils/similarSubreddits.worker';\nimport styles from './Suggestion.module.scss';\nimport CommaSeparatedList from './CommaSeparatedList';\nimport { ReactComponent as Cross } from '../assets/cross.svg';\n\nfunction LinkTo({ subreddit, ...otherProps }: { subreddit: string } & AnchorHTMLAttributes<HTMLAnchorElement>) {\n  return (\n    <a\n      href={`https://www.reddit.com/r/${subreddit}`}\n      target=\"_blank\"\n      rel=\"noopener noreferrer\"\n      {...otherProps}\n    >\n      /r/{subreddit}\n    </a>\n  );\n}\n\nexport default function Suggestion({\n  className,\n  subreddit,\n  score,\n  contributors,\n}: {\n  className?: string;\n  subreddit: string;\n  score: Score;\n  contributors: { [contributor: string]: Score };\n}) {\n  return (\n    <div className={classNames(styles.suggestion, className)}>\n      <div className={styles.contentContainer}>\n        <div className={styles.content}>\n          <LinkTo subreddit={subreddit} className={styles.title} />\n\n          <div className={styles.description}>\n            Similar to <strong>{Math.round(Number(score.toFixed(2)) * 100)}%</strong> of your subreddits\n          </div>\n        </div>\n\n        <div className={styles.controls}>\n          <button type=\"button\" className={styles.excludeButton} title=\"Exclude subreddit\">\n            <Cross />\n          </button>\n        </div>\n      </div>\n\n      <div className={styles.details}>\n        Because you subscribe to\n        {' '}\n        <CommaSeparatedList>\n          {Object.keys(contributors).map((contributor) => (\n            <LinkTo subreddit={contributor} key={contributor} />\n          ))}\n        </CommaSeparatedList>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport styles from './Suggestions.module.scss';\nimport { SimilarityResult } from '../utils/similarSubreddits.worker';\nimport Suggestion from './Suggestion';\n\nexport default function Suggestions({\n  className,\n  data,\n  totalSubreddits,\n}: {\n  className?: string;\n  data: SimilarityResult;\n  totalSubreddits: number;\n}) {\n  return (\n    <div className={className}>\n      {Object.entries(data).map(([subreddit, meta]) => (\n        <Suggestion\n          key={subreddit}\n          subreddit={subreddit}\n          score={meta.score / totalSubreddits}\n          contributors={meta.contributors}\n          className={styles.suggestion}\n        />\n      ))}\n    </div>\n  );\n}\n","import React, { ReactNode } from 'react';\nimport classNames from 'classnames';\nimport styles from './Layout.module.scss';\n\nexport default function Layout({\n  className,\n  children,\n}: {\n  className?: string;\n  children: ReactNode;\n}) {\n  return (\n    <div className={classNames(styles.layout, className)}>\n      {children}\n    </div>\n  );\n}\n","import React, { AnchorHTMLAttributes, ButtonHTMLAttributes } from 'react';\nimport classNames from 'classnames';\nimport styles from './Link.module.scss';\n\nexport default function Link({\n  className,\n  element = 'a',\n  ...otherProps\n}: (\n  ({ element?: 'a' } & AnchorHTMLAttributes<HTMLAnchorElement>) |\n  ({ element: 'button' } & ButtonHTMLAttributes<HTMLButtonElement>)\n)) {\n  if (element === 'a') {\n    return (\n      <a // eslint-disable-line jsx-a11y/anchor-has-content\n        className={classNames(styles.link, className)}\n        rel=\"noopener noreferrer\"\n        target=\"blank\"\n        {...otherProps as AnchorHTMLAttributes<HTMLAnchorElement>}\n      />\n    );\n  }\n\n  return (\n    <button // eslint-disable-line react/button-has-type\n      className={classNames(styles.link, className)}\n      {...otherProps as ButtonHTMLAttributes<HTMLButtonElement>}\n    />\n  );\n}\n","import React from 'react';\nimport styles from './Footer.module.scss';\nimport Link from './Link';\n\nexport default function Footer() {\n  return (\n    <footer className={styles.footer}>\n      <Link href=\"https://github.com/nikaspran/suggest-subreddit\">GitHub</Link>\n      <Link href=\"https://twitter.com/nikaspran\" className={styles.twitterLink}>@nikaspran</Link>\n    </footer>\n  );\n}\n","import React from 'react';\n\nexport default function FlexSpacer() {\n  return <div style={{ flex: '1 1 auto' }} />;\n}\n","import React from 'react';\nimport styles from './LoginPage.module.scss';\nimport { useRedditApi } from './RedditApiProvider';\nimport CallToAction from './CallToAction';\nimport Suggestions from './Suggestions';\nimport Layout from './Layout';\nimport mockSuggestions from '../assets/mockSuggestions.json';\nimport Footer from './Footer';\nimport FlexSpacer from './FlexSpacer';\n\nexport default function LoginPage() {\n  const { login } = useRedditApi();\n\n  return (\n    <Layout className={styles.loginPage}>\n      <div className={styles.loginContainer}>\n        <FlexSpacer />\n\n        <h1 className={styles.title}>Suggest me a subreddit</h1>\n        <CallToAction type=\"button\" onClick={login}>Fetch my subreddits via Reddit</CallToAction>\n        <p className={styles.disclaimer}>All data stays in your browser only</p>\n\n        <FlexSpacer />\n\n        <Footer />\n      </div>\n      <div className={styles.example}>\n        <Suggestions data={mockSuggestions} totalSubreddits={34} />\n      </div>\n    </Layout>\n  );\n}\n","/* eslint-disable import/prefer-default-export */\nimport workerFn, { WorkerInput, WorkerOutput, SimilarityResult } from './similarSubreddits.worker';\n\nconst TIMEOUT_S = 10;\n\nlet worker: Worker | undefined;\n\nfunction createWorker() {\n  const code = workerFn.toString();\n  const blob = new Blob([`(${code})()`]);\n  return new Worker(URL.createObjectURL(blob));\n}\n\nexport async function getSimilarSubreddits(sourceSubreddits: string[], {\n  count = 10,\n}: {\n  count?: number;\n} = {}): Promise<SimilarityResult> {\n  return new Promise((resolve, reject) => {\n    worker = worker || createWorker();\n\n    const invocationKey = `invocation_${Math.random()}`;\n\n    worker.postMessage({\n      invocationKey,\n      sourceSubreddits,\n      count,\n    } as WorkerInput);\n\n    const timeout = setTimeout(() => {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      worker!.removeEventListener('message', resultListener);\n      reject(new Error(`TIMEOUT: could not calculate similar subreddits in ${TIMEOUT_S} seconds`));\n    }, TIMEOUT_S * 1000);\n\n    function resultListener(event: MessageEvent) {\n      const data = event.data as WorkerOutput;\n\n      if (data.invocationKey !== invocationKey) {\n        return;\n      }\n\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      worker!.removeEventListener('message', resultListener);\n      clearTimeout(timeout);\n\n      resolve(data.result);\n    }\n\n    worker.addEventListener('message', resultListener);\n  });\n}\n","type Similarities = { [subreddit: string]: { [subreddit: string]: number } };\n\nexport interface WorkerInput {\n  invocationKey: string;\n  sourceSubreddits: string[];\n  count: number;\n}\n\nexport type Score = number;\nexport interface SimilarityResult {\n  [subreddit: string]: {\n    score: Score;\n    contributors: { [contributor: string]: Score };\n  };\n}\n\nexport interface WorkerOutput {\n  invocationKey: string;\n  result: SimilarityResult;\n}\n\nexport default () => {\n  let waitForSimilarities: ReturnType<typeof fetchSimilarities> | undefined;\n\n  async function fetchSimilarities(): Promise<Similarities> {\n    // fetch is not supported by WebWorkers widely yet\n    return new Promise((resolve, reject) => {\n      function listener(this: XMLHttpRequest) {\n        resolve(JSON.parse(this.responseText));\n      }\n\n      const request = new XMLHttpRequest();\n      request.addEventListener('load', listener);\n      try {\n        // eslint-disable-next-line no-restricted-globals\n        request.open('GET', `${self.location.origin}${process.env.PUBLIC_URL}/similarSubreddits.json`);\n        request.send();\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n\n  async function getSimilarSubreddits({\n    sourceSubreddits,\n    count = 10,\n  }: {\n    sourceSubreddits: string[];\n    count: number;\n  }): Promise<SimilarityResult> {\n    waitForSimilarities = waitForSimilarities || fetchSimilarities();\n\n    const similarTo = await waitForSimilarities;\n\n    const alreadyInSource = new Set(sourceSubreddits.map((subreddit) => subreddit.toLowerCase()));\n\n    const result: SimilarityResult = {};\n    sourceSubreddits.forEach((subreddit) => {\n      const similarSubreddits = similarTo[subreddit] || [];\n      Object.entries(similarSubreddits).forEach(([similarSubreddit, score]) => {\n        if (alreadyInSource.has(similarSubreddit.toLowerCase())) {\n          return;\n        }\n\n        result[similarSubreddit] = result[similarSubreddit] || { score: 0, contributors: {} };\n        result[similarSubreddit].score += score;\n        result[similarSubreddit].contributors[subreddit] = score;\n      });\n    });\n\n\n    const sortedEntries = Object.entries(result)\n      .sort(([, a], [, b]) => b.score - a.score)\n      .slice(0, count);\n\n    return Object.fromEntries(sortedEntries);\n  }\n\n  // eslint-disable-next-line no-restricted-globals\n  self.addEventListener('message', async (event: MessageEvent) => {\n    const data = event.data as WorkerInput;\n\n    postMessage({\n      invocationKey: event.data.invocationKey,\n      result: await getSimilarSubreddits(data),\n    } as WorkerOutput, undefined as never);\n  });\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"g\", {\n  fill: \"none\",\n  fillRule: \"evenodd\"\n}, /*#__PURE__*/React.createElement(\"g\", {\n  transform: \"translate(1 1)\",\n  strokeWidth: 2\n}, /*#__PURE__*/React.createElement(\"circle\", {\n  strokeOpacity: 0.5,\n  cx: 18,\n  cy: 18,\n  r: 18\n}), /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M36 18c0-9.94-8.06-18-18-18\"\n}, /*#__PURE__*/React.createElement(\"animateTransform\", {\n  attributeName: \"transform\",\n  type: \"rotate\",\n  from: \"0 18 18\",\n  to: \"360 18 18\",\n  dur: \"1s\",\n  repeatCount: \"indefinite\"\n}))));\n\nvar SvgSpinner = function SvgSpinner(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 38,\n    height: 38,\n    viewBox: \"0 0 38 38\",\n    stroke: \"#fff\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgSpinner, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/spinner.7c3e8212.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport styles from './Loading.module.scss';\nimport { ReactComponent as Spinner } from '../assets/spinner.svg';\n\nexport default function Loading() {\n  return (\n    <Spinner className={styles.loading} />\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport styles from './SuggestionPage.module.scss';\nimport Suggestions from './Suggestions';\nimport { useRedditApi } from './RedditApiProvider';\nimport { Subreddit } from '../utils/RedditApi';\nimport { getSimilarSubreddits } from '../utils/similarSubreddits';\nimport { SimilarityResult } from '../utils/similarSubreddits.worker';\nimport Loading from './Loading';\nimport Layout from './Layout';\nimport Link from './Link';\nimport FlexSpacer from './FlexSpacer';\nimport Footer from './Footer';\n\nexport default function SuggestionPage() {\n  const { redditApi, logout } = useRedditApi();\n  const [similarSubreddits, setSimilarSubreddits] = useState<SimilarityResult>();\n  const [subscribedSubreddits, setSubscribedSubreddits] = useState<Subreddit[]>();\n  const [loadingState, setLoadingState] = useState<string | undefined>(undefined);\n\n  useEffect(() => {\n    if (!redditApi) {\n      return;\n    }\n\n    setLoadingState('Fetching your subreddits (1/2)...');\n    redditApi.fetchSubscribedSubreddits()\n      .then((subreddits) => {\n        setSubscribedSubreddits(subreddits);\n        setLoadingState('Calculating similar subreddits (2/2)...');\n\n        const subredditNames = subreddits.map((subreddit) => subreddit.data.display_name.toLowerCase());\n        return getSimilarSubreddits(subredditNames);\n      })\n      .then(setSimilarSubreddits)\n      .then(() => {\n        setLoadingState(undefined);\n      });\n  }, [redditApi]);\n\n  return (\n    <Layout className={styles.container}>\n      {similarSubreddits ? (\n        <>\n          <div className={styles.description}>\n            <FlexSpacer />\n\n            <h1 className={styles.title}>Suggest me a subreddit</h1>\n            <Link element=\"button\" onClick={logout} className={styles.logoutLink}>Logout</Link>\n\n            <FlexSpacer />\n\n            <Footer />\n          </div>\n          <Suggestions\n            data={similarSubreddits}\n            className={styles.suggestions}\n            totalSubreddits={subscribedSubreddits?.length || 0}\n          />\n        </>\n      ) : (\n        <div className={styles.loadingContainer}>\n          <div>{loadingState}</div>\n          <Loading />\n        </div>\n      )}\n    </Layout>\n  );\n}\n","import React from 'react';\nimport RedditApiProvider, { useRedditApi } from './components/RedditApiProvider';\nimport LoginPage from './components/LoginPage';\nimport SuggestionPage from './components/SuggestionPage';\n\nfunction App() {\n  const { redditApi } = useRedditApi();\n\n  return redditApi ? (\n    <SuggestionPage />\n  ) : (\n    <LoginPage />\n  );\n}\n\nexport default () => (\n  <RedditApiProvider>\n    <App />\n  </RedditApiProvider>\n);\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}